pipeline {

     parameters {
        string(name: 'artifact_name', defaultValue: 'sample_project', description: 'artifact_name');
        string(name: 'workspace', defaultValue: 'custom_workspace_', description: 'workspace');
        booleanParam(name: 'deploy', defaultValue: true, description: 'deploy to env');
     }

     agent {
        label {
            label ""
             customWorkspace "${workspace}_${BUILD_NUMBER}"
        }
     }

    stages {
        stage('checkout devoputils') {
              steps {
                sh 'git config --global --list'
                sh 'git clone https://devops2021devops:Devops2021@github.com/devops2021devops/devopsutils.git -b main --single-branch'
              }
        }

        stage('checkout app repo') {
              steps {
                git 'https://devops2021devops:Devops2021@github.com/devops2021devops/simple-java-maven-app.git'
              }
        }

        stage('update pom.xml') {
          steps {
               sh "python ./devopsutils/change_pom.py -v ${BUILD_NUMBER} -a ${artifact_name}"
          }
        }

        stage('Build') {
            steps {
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'

                }
            }
        }

        stage ('Generate result.json') {
            steps {
                echo "executing python script"
                 sh """\
                    #!/usr/bin/env python
                    import json
                    with open('result.json', 'w') as json_file:
                        json.dump('{"created by": "python script"}', json_file)
                    """.stripIndent()
                 
                //sh '''python <<< $(echo -e "import json\nwith open('result.json', 'w') as f:\n  json.dump('{"created by": "python script"}', f)")'''
                    }
        }
        stage('Deploy') {
             steps {
              // script {
              //         env.RELEASE = input message :'Deploy?' , ok: 'Do it!',
              //             parameters: [choice(name: 'ENVIRONMENTS',choices: ['Dev','Stage','Production'])]
             //  }         
             //   echo "${env.RELEASE}"
                  sh "pip install gitpython"
                  // the purpose of the python script that iv'e started here was to try , catch if the Dev/stage already deployed 
                   sh """\
                    #!/usr/bin/env python
                    from git import Repo
                    repo = Repo(".")
                    branches = repo.branches
                    print(branches)
                    if("Dev" in [str(x).replace('<git.Head "refs/heads/',"") for x in branches]):
                         print("exist")
                         repo.heads.Dev.checkout()
                    else:
                         print("create new env branch")
                         repo.create_head('Dev')
                    """.stripIndent()
                  // delete version before upload new one
                  
                  sh "git add result.json"
                  sh "git status"
                  sh "git commit -m 'add result.json file to Dev Stage'"
                  sh "git checkout -b Dev || git checkout Dev"
                   // git checkout -b ${env.RELEASE} 
                  // need try and catch to do git checkout -b if the branch already created
                  // if branch already exist need to force push/rebase/merge to Dev/Stage
                  sh "git checkout -b Stage || git checkout Stage"
                  sh "git remote -v"
                  
                  //  git commit -m "add result.json file to ${env.RELEASE}" 
                  //sh "git push origin Dev Stage"
                  sh "git push https://devops2021devops:Devops2021@github.com/devops2021devops/simple-java-maven-app.git --delete Dev Stage"
                  sh "git push https://devops2021devops:Devops2021@github.com/devops2021devops/simple-java-maven-app.git Dev Stage"
                
             }
        }

    }

}
