pipeline {

     parameters {
        string(name: 'artifact_name', defaultValue: 'sample_project', description: 'artifact_name');
        string(name: 'workspace', defaultValue: 'custom_workspace_', description: 'workspace');
        booleanParam(name: 'deploy', defaultValue: true, description: 'deploy to env');
     }

     agent {
        label {
            label ""
             customWorkspace "${workspace}_${BUILD_NUMBER}"
        }
     }

    stages {
        stage('checkout devoputils') {
              steps {
                sh 'git config --global --list'
                sh 'git clone https://github.com/devops2021devops/devopsutils.git -b main --single-branch'
              }
        }

        stage('checkout') {
              steps {
                git 'https://github.com/jglick/simple-maven-project-with-tests.git'
              }
        }

        stage('update pom.xml') {
          steps {
               sh "python ./devopsutils/change_pom.py -v ${BUILD_NUMBER} -a ${artifact_name}"
          }
        }

        stage('Build') {
            steps {
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'

                }
            }
        }

        stage ('Generate result.json') {
            steps {
                echo "executing python script"
                 sh """\
                    #!/usr/bin/env python
                    import json
                    with open('result.json', 'w') as json_file:
                        json.dump('{"created by": "python script"}', json_file)
                    """.stripIndent()
                 
                //sh '''python <<< $(echo -e "import json\nwith open('result.json', 'w') as f:\n  json.dump('{"created by": "python script"}', f)")'''
                    }
        }
        stage('Deploy') {
             steps {
              // script {
              //         env.RELEASE = input message :'Deploy?' , ok: 'Do it!',
              //             parameters: [choice(name: 'ENVIRONMENTS',choices: ['Dev','Stage','Production'])]
             //  }         
             //   echo "${env.RELEASE}"
                  
                  
                   sh """
                    git config --global user.email "devopstasks2021@gmail.com"
                    git config --global user.name "devops2021devops"
                    git config --global user.password "Devops2021"
                   // git checkout -b ${env.RELEASE} 
                    git checkout -b Dev
                    git add result.json
                    git commit -m "add result.json file to Dev"
                    git checkout -b Staging
                    git add result.json
                    git commit -m "add result.json file to Staging" 
                  //  git commit -m "add result.json file to ${env.RELEASE}" 
                    git commit -m "add result.json file to Dev" 
                    git push git@github.com:devops2021devops/simple-java-maven-app.git Dev Staging
                """
             }
        }

    }

}
